{"version":3,"sources":["images/spinner.gif","utils/setAuthToken.js","utils/API.js","actions/authActions.js","actions/types.js","validation/is-empty.js","reducers/authReducer.js","reducers/errorReducer.js","reducers/productReducer.js","reducers/userReducer.js","reducers/cartReducer.js","reducers/modalReducer.js","reducers/index.js","store.js","actions/cartActions.js","components/layout/Navbar.js","components/layout/Landing.js","components/auth/Register.js","components/auth/Login.js","actions/userActions.js","actions/modalActions.js","components/Spinner.js","utils/removeDuplicates.js","components/Dashboard.js","components/layout/Footer.js","actions/productActions.js","components/Groceries.js","components/Supplements.js","components/Clothing.js","components/Search.js","components/modals/Address.js","components/Cart.js","components/modals/Checkout.js","components/modals/Prime.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","setAuthToken","token","axios","defaults","headers","common","API","registerUser","userData","post","loginUser","getUser","id","get","signupForPrime","put","placeOrder","body","addAddress","getProduct","rateProduct","getProducts","getProductsByCategory","category","searchProducts","query","setCurrentUser","decoded","type","payload","logoutUser","dispatch","localStorage","removeItem","isEmpty","value","undefined","Object","keys","length","trim","initialState","isAuthenticated","user","cartItems","getItem","cartShowing","cart","JSON","parse","order","subtotal","checkoutModal","primeModal","addressModal","checkout","combineReducers","auth","state","arguments","action","objectSpread","errors","products","modal","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","apply","window","__REDUX_DEVTOOLS_EXTENSION__","updateCart","updateCartItems","toggleCart","Navbar","search","onCartClick","_this","props","onLogoutClick","e","preventDefault","history","push","onChange","setState","defineProperty","target","name","onSubmit","setTimeout","this","_this$props$auth","navbarLogo","react_default","a","createElement","Link","to","className","src","width","alt","searchBar","placeholder","aria-label","burgerIcon","data-toggle","data-target","aria-controls","aria-expanded","navMenu","navMsg","authLinks","onClick","guestLinks","Component","connect","Landing","Register","email","password","password2","newUser","nextProps","htmlFor","classnames","is-invalid","then","res","catch","err","response","data","withRouter","Login","result","setItem","jwt_decode","getCurrentUser","console","log","toggleCheckoutModal","togglePrimeModal","toggleAddressModal","Spinner","spinner","style","margin","display","removeDuplicates","arr","prop","obj","reduce","prev","next","map","i","Dashboard","rating","ratingChanged","newRating","passId","_this$state","onPrime","onUpdateAddress","dashboardContent","primeMessage","orderMessage","addressMessage","_this2","date","prime","orders","address","_user$address","street","city","zipcode","member","fee","nextPayment","uniqueOrders","_id","brand","imgUrl","key","react_stars_default","count","size","color2","total","number","Footer","Date","getFullYear","Groceries","addToCart","description","price","item","quantity","forEach","stored","newCart","acc","serializedCart","stringify","location","pathname","replace","product","edit","Supplements","Clothing","Search","toLowerCase","Address","$state","toggle","onCheckout","addressForm","reactstrap_es","isOpen","maxLength","Cart","getFinalOrder","getSubtotal","onPlus","parseInt","onMinus","onTrash","items","Fragment","modals_Address","isShowing","aria-hidden","toFixed","disabled","Checkout","onOrder","onCancel","shipping","shippingText","checkoutContent","tax","concat","scope","parseFloat","Prime","primeContent","jwtToken","currentTime","now","exp","href","App","es","BrowserRouter","Route","path","component","exact","layout_Footer","Boolean","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.82fb7ce9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/spinner.8b9a5cd1.gif\";","import axios from 'axios';\n\nconst setAuthToken = token => {\n  if (token) {\n    // Apply to every request\n    axios.defaults.headers.common['Authorization'] = token;\n  } else {\n    // Delete auth header\n    delete axios.defaults.headers.common['Authorization'];\n  }\n};\n\nexport default setAuthToken;\n","import axios from 'axios';\n\nexport default {\n  registerUser: userData => axios.post('/api/users/register', userData),\n  loginUser: userData => axios.post('/api/users/login', userData),\n  getUser: id => axios.get('/api/users/' + id),\n  signupForPrime: id => axios.put('/api/users/prime/' + id),\n  placeOrder: (id, body) => axios.put('/api/users/order/' + id, body),\n  addAddress: (id, body) => axios.put('/api/users/address/' + id, body),\n  getProduct: id => axios.get('/api/products/' + id),\n  rateProduct: (id, body) => axios.put('/api/products/rating/' + id, body),\n  getProducts: () => axios.get('/api/products'),\n  getProductsByCategory: category => axios.get('/api/products/' + category),\n  searchProducts: query => axios.get('/api/products/search/' + query)\n};\n","import API from '../utils/API';\nimport setAuthToken from '../utils/setAuthToken';\nimport jwt_decode from 'jwt-decode';\n\nimport { GET_ERRORS, SET_CURRENT_USER } from './types';\n\n// Register User\nexport const registerUser = (userData, history) => dispatch => {\n  API.registerUser(userData)\n    .then(res => history.push('/login'))\n    .catch(err =>\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      })\n    );\n};\n\n// Login - Get User Token\nexport const loginUser = userData => dispatch => {\n  API.loginUser(userData)\n    .then(result => {\n      // Save to localStorage\n      const { token } = result.data;\n      // Set token to ls\n      localStorage.setItem('jwtToken', token);\n      // Set token to Auth header\n      setAuthToken(token);\n      // Decode token to get user data\n      const decoded = jwt_decode(token);\n      // Set current user\n      dispatch(setCurrentUser(decoded));\n    })\n    .catch(err =>\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      })\n    );\n};\n\n// Set logged in user\nexport const setCurrentUser = decoded => {\n  return {\n    type: SET_CURRENT_USER,\n    payload: decoded\n  };\n};\n\n// Log user out\nexport const logoutUser = () => dispatch => {\n  // Remove token from localStorage\n  localStorage.removeItem('jwtToken');\n  // Remove auth header for future requests\n  setAuthToken(false);\n\n  // Set current user to {} which will set isAuthenticated to false\n\n  dispatch(setCurrentUser({}));\n};\n","export const GET_ERRORS = 'GET_ERRORS';\nexport const SET_CURRENT_USER = 'SET_CURRENT_USER';\nexport const GET_PRODUCTS = 'GET_PRODUCTS';\nexport const SEARCH_PRODUCTS = 'SEARCH_PRODUCTS';\nexport const GET_PRODUCTS_BY_CATEGORY = 'GET_PRODUCTS_BY_CATEGORY';\nexport const GET_CURRENT_USER = 'GET_CURRENT_USER';\nexport const RESET_CART_ITEMS = 'RESET_CART_ITEMS';\nexport const UPDATE_CART_ITEMS = 'UPDATE_CART_ITEMS';\nexport const UPDATE_CART = 'UPDATE_CART';\nexport const TOGGLE_CART = 'TOGGLE_CART';\nexport const TOGGLE_CHECKOUT_MODAL = 'TOGGLE_CHECKOUT_MODAL';\nexport const TOGGLE_PRIME_MODAL = 'TOGGLE_PRIME_MODAL';\nexport const TOGGLE_ADDRESS_MODAL = 'TOGGLE_ADDRESS_MODAL';\nexport const GET_FINAL_ORDER = 'GET_FINAL_ORDER';\nexport const GET_SUBTOTAL = 'GET_SUBTOTAL';\n","const isEmpty = value =>\n  value === undefined ||\n  value === null ||\n  (typeof value === 'object' && Object.keys(value).length === 0) ||\n  (typeof value === 'string' && value.trim().length === 0);\n\nexport default isEmpty;\n","import isEmpty from '../validation/is-empty';\n\nimport { SET_CURRENT_USER } from '../actions/types';\n\nconst initialState = {\n  isAuthenticated: false,\n  user: {}\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case SET_CURRENT_USER:\n      return {\n        ...state,\n        isAuthenticated: !isEmpty(action.payload),\n        user: action.payload\n      };\n    default:\n      return state;\n  }\n}\n","import { GET_ERRORS } from '../actions/types';\n\nconst initialState = {};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case GET_ERRORS:\n      return action.payload;\n    default:\n      return state;\n  }\n}\n","import {\n  GET_PRODUCTS_BY_CATEGORY,\n  GET_PRODUCTS,\n  SEARCH_PRODUCTS\n} from '../actions/types';\n\nconst initialState = [];\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case GET_PRODUCTS_BY_CATEGORY:\n      return action.payload;\n    case GET_PRODUCTS:\n      return action.payload;\n    case SEARCH_PRODUCTS:\n      return action.payload;\n    default:\n      return state;\n  }\n}\n","import { GET_CURRENT_USER } from '../actions/types';\n\nconst initialState = {};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case GET_CURRENT_USER:\n      return action.payload;\n    default:\n      return state;\n  }\n}\n","import {\n  RESET_CART_ITEMS,\n  UPDATE_CART_ITEMS,\n  TOGGLE_CART,\n  UPDATE_CART,\n  GET_FINAL_ORDER,\n  GET_SUBTOTAL\n} from '../actions/types';\n\nconst initialState = {\n  cartItems: localStorage.getItem('cartItems') || 0,\n  cartShowing: false,\n  cart: JSON.parse(localStorage.getItem('cart')) || [],\n  order: [],\n  subtotal: 0\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case RESET_CART_ITEMS:\n      return { ...state, cartItems: 0 };\n    case UPDATE_CART_ITEMS:\n      return { ...state, cartItems: action.payload };\n    case UPDATE_CART:\n      return { ...state, cart: action.payload };\n    case TOGGLE_CART:\n      return { ...state, cartShowing: !state.cartShowing };\n    case GET_FINAL_ORDER:\n      return { ...state, order: action.payload };\n    case GET_SUBTOTAL:\n      return { ...state, subtotal: action.payload };\n    default:\n      return state;\n  }\n};\n","import {\n  TOGGLE_CHECKOUT_MODAL,\n  TOGGLE_PRIME_MODAL,\n  TOGGLE_ADDRESS_MODAL\n} from '../actions/types';\n\nconst initialState = {\n  checkoutModal: false,\n  primeModal: false,\n  addressModal: false,\n  checkout: false\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case TOGGLE_CHECKOUT_MODAL:\n      return { ...state, checkoutModal: !state.checkoutModal };\n    case TOGGLE_PRIME_MODAL:\n      return { ...state, primeModal: !state.primeModal };\n    case TOGGLE_ADDRESS_MODAL:\n      return {\n        ...state,\n        addressModal: !state.addressModal,\n        checkout: action.payload\n      };\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from 'redux';\nimport authReducer from './authReducer';\nimport errorReducer from './errorReducer';\nimport productReducer from './productReducer';\nimport userReducer from './userReducer';\nimport cartReducer from './cartReducer';\nimport modalReducer from './modalReducer';\n\nexport default combineReducers({\n  auth: authReducer,\n  errors: errorReducer,\n  products: productReducer,\n  user: userReducer,\n  cart: cartReducer,\n  modal: modalReducer\n});\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n  rootReducer,\n  initialState,\n  compose(\n    applyMiddleware(...middleware),\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n  )\n);\n\nexport default store;\n","import {\n  RESET_CART_ITEMS,\n  UPDATE_CART_ITEMS,\n  TOGGLE_CART,\n  UPDATE_CART,\n  GET_FINAL_ORDER,\n  GET_SUBTOTAL\n} from './types';\n\nexport const resetCartItems = () => {\n  return { type: RESET_CART_ITEMS };\n};\n\nexport const updateCart = payload => {\n  return {\n    type: UPDATE_CART,\n    payload\n  };\n};\n\nexport const updateCartItems = payload => {\n  return {\n    type: UPDATE_CART_ITEMS,\n    payload\n  };\n};\nexport const toggleCart = () => {\n  return {\n    type: TOGGLE_CART\n  };\n};\n\nexport const getFinalOrder = payload => {\n  return {\n    type: GET_FINAL_ORDER,\n    payload\n  };\n};\nexport const getSubtotal = payload => {\n  return {\n    type: GET_SUBTOTAL,\n    payload\n  };\n};\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { logoutUser } from '../../actions/authActions';\nimport { toggleCart } from '../../actions/cartActions';\n\nclass Navbar extends Component {\n  state = {\n    search: ''\n  };\n\n  onCartClick = () => {\n    this.props.toggleCart();\n  };\n  onLogoutClick = e => {\n    e.preventDefault();\n    this.props.logoutUser();\n    this.props.history.push('/');\n  };\n\n  onChange = e => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  onSubmit = e => {\n    e.preventDefault();\n    this.props.history.push('/loading');\n    setTimeout(() => {\n      this.props.history.push('/search/' + this.state.search);\n      this.setState({ search: '' });\n    }, 0.001);\n  };\n\n  render() {\n    const cartItems = this.props.cart.cartItems;\n    const { isAuthenticated, user } = this.props.auth;\n\n    const navbarLogo = (\n      <Link to=\"/\" className=\"navbar-brand ml-3\">\n        <img\n          src=\"../assets/images/logoforonlinestore1.png\"\n          width=\"100\"\n          alt=\"\"\n        />\n      </Link>\n    );\n\n    const searchBar = (\n      <form className=\"ml-3\" onSubmit={this.onSubmit}>\n        <div>\n          <input\n            className=\"form-control pr-5 search\"\n            type=\"text\"\n            placeholder=\"Search Products\"\n            aria-label=\"Search\"\n            name=\"search\"\n            value={this.state.search}\n            onChange={this.onChange}\n          />\n        </div>\n      </form>\n    );\n\n    const burgerIcon = (\n      <button\n        className=\"navbar-toggler\"\n        type=\"button\"\n        data-toggle=\"collapse\"\n        data-target=\"#navbar\"\n        aria-controls=\"navbarSupportedContent\"\n        aria-expanded=\"false\"\n        aria-label=\"Toggle navigation\"\n      >\n        <span>\n          <i className=\"fas fa-bars\" />\n        </span>\n      </button>\n    );\n    const navMenu = (\n      <div className=\"collapse navbar-collapse mx-3\" id=\"navbar\">\n        <ul className=\"navbar-nav mr-auto\">\n          <li className=\"nav-item custom-link ml-4 pt-1\">\n            <Link to=\"/groceries\" className=\"bold-light-gray\">\n              GROCERIES\n            </Link>\n          </li>\n          <li className=\"nav-item custom-link ml-4 pt-1\">\n            <Link to=\"/supplements\" className=\"bold-light-gray\">\n              SUPPLEMENTS\n            </Link>\n          </li>\n          <li className=\"nav-item  custom-link ml-4 pt-1\">\n            <Link to=\"/clothing\" className=\"bold-light-gray pb-3\">\n              CLOTHING\n            </Link>\n          </li>\n        </ul>\n        {searchBar}\n      </div>\n    );\n\n    const navMsg = (\n      <span className=\"d-none navMsg d-md-block\">\n        <small>Free U.S. Shipping for Prime Members*</small>\n      </span>\n    );\n\n    const authLinks = (\n      <ul className=\"ml-auto pr-5\">\n        <li className=\"d-inline px-2\" onClick={this.onCartClick}>\n          <i className=\"fas fa-shopping-cart\" />\n          <span className=\"class-items ml-1\">{cartItems}</span>\n        </li>\n        <Link to=\"/dashboard\">\n          <span className=\"name px-2 px-sm-3 px-md-4\">{user.name}</span>\n        </Link>\n\n        <li className=\"d-inline pl-2\">\n          <span className=\"nav-link1 logout\" onClick={this.onLogoutClick}>\n            Logout\n          </span>\n        </li>\n      </ul>\n    );\n\n    const guestLinks = (\n      <ul className=\"ml-auto pr-5\">\n        <li className=\"d-inline px-2\" onClick={this.onCartClick}>\n          <i className=\"fas fa-shopping-cart\" />\n          <span className=\"class-items ml-1\">{cartItems}</span>\n        </li>\n        <li className=\"d-inline px-4\">\n          <Link className=\"nav-link1\" to=\"/register\">\n            Register\n          </Link>\n        </li>\n        <li className=\"d-inline pl-2\">\n          <Link className=\"nav-link1\" to=\"/login\">\n            Login\n          </Link>\n        </li>\n      </ul>\n    );\n    return (\n      <div className=\"divup\">\n        <nav className=\"nav-top\">\n          <div className=\"container-fluid\">\n            <div className=\"d-flex nav-cont row pt-2\">\n              {navMsg} {isAuthenticated ? authLinks : guestLinks}\n            </div>\n          </div>\n        </nav>\n        <nav className=\"navbar navbar-nav navbar-expand-md navbar-light bg-white\">\n          <div className=\"container-fluid\">\n            {navbarLogo}\n            {burgerIcon}\n            {navMenu}\n          </div>\n        </nav>\n      </div>\n    );\n  }\n}\n\nNavbar.propTypes = {\n  logoutUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  cart: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  cart: state.cart\n});\n\nexport default connect(\n  mapStateToProps,\n  { logoutUser, toggleCart }\n)(Navbar);\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { PropTypes } from 'prop-types';\nimport { connect } from 'react-redux';\n\nclass Landing extends Component {\n  componentDidMount() {\n    if (this.props.auth.isAuthenticated) {\n      this.props.history.push('/dashboard');\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"landing\" id=\"home-section\">\n        <div className=\"overlay\">\n          <div className=\"home-inner\">\n            <div className=\"container-fluid\">\n              <div className=\"row\">\n                <div className=\"col-lg-4\">\n                  <div className=\"img-wrap-overlap d-none d-lg-block\">\n                    <img\n                      className=\"\"\n                      src=\"../assets/images/organic.jpg \"\n                      alt=\"#\"\n                    />\n                    <div className=\"img-caption\">\n                      <h5>Organic Fabrics</h5>\n                      <h1>Look good & feel good</h1>\n                    </div>\n                  </div>\n                </div>\n                <div className=\"col-lg-8\">\n                  <div className=\"img-wrap pl-5\">\n                    <img\n                      className=\"img-fluid float-right\"\n                      src=\"../assets/images/clothingface.jpg\"\n                      alt=\"#\"\n                    />\n                    <div className=\"img-caption-2\">\n                      <Link to=\"/clothing\">\n                        {' '}\n                        <h3>Shop Clothing</h3>\n                      </Link>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div className=\"container text-center light-gray mt-2 pt-2\">\n                <h3 className=\"text-head dark-gray\">\n                  Take care of Yourself and the Planet\n                </h3>\n              </div>\n              <div className=\"container-fluid\">\n                <div className=\"row\">\n                  <div className=\"wrap-1-of-2 col-sm-12  col-md-8 col-lg-8 mt-5 pl-5\">\n                    <div className=\"\">\n                      <img\n                        className=\"img-fluid\"\n                        src=\"../assets/images/facefarm.jpg \"\n                        alt=\"#\"\n                      />\n                    </div>\n                    <div className=\"img-caption-2\">\n                      <Link to=\"/groceries\">\n                        <h3 className=\"left-caption\">Shop Groceries</h3>\n                      </Link>\n                    </div>\n                  </div>\n                  <div className=\"wrap-2-of-2 col-sm-12 col-md-4 col-lg-4 mt-5 px-0 py-0 pr-4\">\n                    <div className=\"\">\n                      <div className=\"\">\n                        <img\n                          className=\"img-fluid pl-0 pr-2\"\n                          src=\"../assets/images/supplements1.jpg\"\n                          alt=\"#\"\n                        />\n                      </div>\n                      <div className=\"img-caption-2\">\n                        <Link to=\"/supplements\">\n                          {' '}\n                          <h3>Shop Supplements</h3>\n                        </Link>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div className=\"container-fluid cards mt-5 pt-5\">\n                <div className=\"row\">\n                  <div className=\"col-sm-12 col-md-4 col-lg-4 d-flex card-feature card align-items-center px-5 text-center text-gray\">\n                    WEAR ORGANIC\n                    <img\n                      src=\"../assets/images/organic-01.png\"\n                      alt=\"\"\n                      className=\"w-25 py-5\"\n                    />\n                    <p className=\"small-par text-gray\">\n                      Organic cotton is grown without the use of toxic\n                      pesticides, fertilizers and GMO’s that are proven to harm\n                      the environment, farmers, producers and the consumer.\n                    </p>\n                  </div>\n\n                  <div className=\"col-sm-12 col-md-4 col-lg-4 d-flex card align-items-center card-feature px-5 text-center text-gray border-y\">\n                    EAT HEALTHY\n                    <img\n                      src=\"../assets/images/organic-02.png\"\n                      alt=\"\"\n                      className=\"w-25 py-5\"\n                    />\n                    <p className=\"small-par\">\n                      Organic farming in general features practices that strive\n                      to cycle resources, promote ecological balance, and\n                      conserve biodiversity.\n                    </p>\n                  </div>\n\n                  <div className=\"col-sm-12 col-md-4 col-lg-4 d-flex card align-items-center px-5 card-feature text-center text-gray\">\n                    ENHACE YOUR LIFE\n                    <img\n                      src=\"../assets/images/organic-03.png\"\n                      alt=\"\"\n                      className=\"w-25 py-5\"\n                    />\n                    <p className=\"small-par\">\n                      Certified organic dietary supplements provide nutrients in\n                      their most natural form, which means they are the most\n                      biologically active and beneficial they can be.\n                    </p>\n                  </div>\n                </div>\n              </div>\n              <div className=\"container text-center heading light-gray mt-5 py-5\">\n                <h3 className=\"text-head dark-gray\">\n                  We are more than a fitness Store\n                </h3>\n                <p className=\"font-italic times mx-auto bottom-text\">\n                  We believe in positively impacting our community and the\n                  environment.\n                </p>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nLanding.propTypes = {\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps)(Landing);\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport classnames from 'classnames';\nimport { connect } from 'react-redux';\nimport { registerUser } from '../../actions/authActions';\n\nclass Register extends Component {\n  state = {\n    name: '',\n    email: '',\n    password: '',\n    password2: '',\n    errors: {}\n  };\n\n  componentDidMount() {\n    if (this.props.auth.isAuthenticated) {\n      this.props.history.push('/dashboard');\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n  }\n\n  onChange = e => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  onSubmit = e => {\n    e.preventDefault();\n\n    const newUser = {\n      name: this.state.name,\n      email: this.state.email,\n      password: this.state.password,\n      password2: this.state.password2\n    };\n\n    this.props.registerUser(newUser, this.props.history);\n  };\n\n  render() {\n    const { errors } = this.state;\n    return (\n      <div className=\"container my-4 pt-2 content\">\n        <div className=\"mx-auto col-md-12 col-lg-10\">\n          <div className=\"row\">\n            <div className=\"col-sm-12 col-md-6 col-lg-6\">\n              <div className=\"card mb-5 px-1 pt-5 pb-4\">\n                <div className=\"register\">\n                  <i className=\"ml-4 fas fa-lock\" />\n                  <h5 className=\"d-inline card-title ml-2\">Register</h5>\n                  <div className=\"card-body\">\n                    <form onSubmit={this.onSubmit}>\n                      <div className=\"form-group\">\n                        <label htmlFor=\"Name\" className=\"label\">\n                          Full Name\n                        </label>\n                        <input\n                          type=\"text\"\n                          className={classnames(\n                            'form-control form-control-lg',\n                            {\n                              'is-invalid': errors.name\n                            }\n                          )}\n                          name=\"name\"\n                          value={this.state.name}\n                          onChange={this.onChange}\n                        />\n                        {errors.name && (\n                          <div className=\"invalid-feedback\">{errors.name}</div>\n                        )}\n                      </div>\n                      <div className=\"form-group\">\n                        <label htmlFor=\"Email\" className=\"label\">\n                          Email Address\n                        </label>\n                        <input\n                          type=\"email\"\n                          className={classnames(\n                            'form-control form-control-lg',\n                            {\n                              'is-invalid': errors.email\n                            }\n                          )}\n                          name=\"email\"\n                          value={this.state.email}\n                          onChange={this.onChange}\n                        />\n                        {errors.email && (\n                          <div className=\"invalid-feedback\">{errors.email}</div>\n                        )}\n                      </div>\n                      <div className=\"form-group\">\n                        <label htmlFor=\"Password\" className=\"label\">\n                          Password\n                        </label>\n                        <input\n                          type=\"password\"\n                          className={classnames(\n                            'form-control form-control-lg',\n                            {\n                              'is-invalid': errors.password\n                            }\n                          )}\n                          name=\"password\"\n                          value={this.state.password}\n                          onChange={this.onChange}\n                        />\n                        {errors.password && (\n                          <div className=\"invalid-feedback\">\n                            {errors.password}\n                          </div>\n                        )}\n                      </div>\n                      <div className=\"form-group\">\n                        <label htmlFor=\"Password\" className=\"label\">\n                          Confirm Password\n                        </label>\n                        <input\n                          type=\"password\"\n                          className={classnames(\n                            'form-control form-control-lg',\n                            {\n                              'is-invalid': errors.password2\n                            }\n                          )}\n                          name=\"password2\"\n                          value={this.state.password2}\n                          onChange={this.onChange}\n                        />\n                        {errors.password2 && (\n                          <div className=\"invalid-feedback\">\n                            {errors.password2}\n                          </div>\n                        )}\n                      </div>\n                      <input\n                        type=\"submit\"\n                        className=\"btn btn-brown-custom  btn-block mt-4 py-2\"\n                      />\n                    </form>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div className=\"col-sm-12 col-md-6 col-lg-6\">\n              <div className=\"card mb-5 py-5 px-1\">\n                <h5 className=\"card-title ml-3\">Already have an account?</h5>\n                <div className=\"card-body pb-5\">\n                  <Link\n                    to=\"/login\"\n                    className=\"btn btn-success-custom btn-block\"\n                  >\n                    Sign In\n                  </Link>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nRegister.propTypes = {\n  registerUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  errors: state.errors\n});\n\nexport default connect(\n  mapStateToProps,\n  { registerUser }\n)(withRouter(Register));\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport classnames from 'classnames';\nimport { loginUser } from '../../actions/authActions';\n\nclass Login extends Component {\n  state = {\n    email: '',\n    password: '',\n    errors: {}\n  };\n\n  componentDidMount() {\n    if (this.props.auth.isAuthenticated) {\n      this.props.history.push('/dashboard');\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.auth.isAuthenticated) {\n      this.props.history.push('/dashboard');\n    }\n\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n  }\n\n  onSubmit = e => {\n    e.preventDefault();\n\n    const userData = {\n      email: this.state.email,\n      password: this.state.password\n    };\n\n    this.props.loginUser(userData);\n  };\n\n  onChange = e => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  render() {\n    const { errors } = this.state;\n    return (\n      <div className=\"container my-4 pt-2 content\">\n        <div className=\"mx-auto col-sm-12 col-md-12 col-lg-10\">\n          <div className=\"row\">\n            <div className=\"col-sm-12 col-md-6 col-lg-6\">\n              <div className=\"card mb-5 px-1 pt-5 pb-5\">\n                <div className=\"login\">\n                  <i className=\"ml-4 fas fa-lock\" />\n                  <h5 className=\"d-inline card-title ml-2\">Log In</h5>\n                  <div className=\"card-body\">\n                    <form onSubmit={this.onSubmit}>\n                      <div className=\"form-group\">\n                        <label htmlFor=\"name\" className=\"label\">\n                          {' '}\n                          Email Address\n                        </label>\n                        <input\n                          type=\"email\"\n                          className={classnames(\n                            'form-control form-control-lg',\n                            {\n                              'is-invalid': errors.email\n                            }\n                          )}\n                          name=\"email\"\n                          value={this.state.email}\n                          onChange={this.onChange}\n                        />\n                        {errors.email && (\n                          <div className=\"invalid-feedback\">{errors.email}</div>\n                        )}\n                      </div>\n                      <div className=\"form-group\">\n                        <label htmlFor=\"Password\" className=\"label\">\n                          Password\n                        </label>\n                        <input\n                          type=\"password\"\n                          className={classnames(\n                            'form-control form-control-lg',\n                            {\n                              'is-invalid': errors.password\n                            }\n                          )}\n                          name=\"password\"\n                          value={this.state.password}\n                          onChange={this.onChange}\n                        />\n                        {errors.password && (\n                          <div className=\"invalid-feedback\">\n                            {errors.password}\n                          </div>\n                        )}\n                      </div>\n                      <input\n                        type=\"submit\"\n                        className=\"btn btn-brown-custom btn-block mt-4 py-2\"\n                      />\n                    </form>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div className=\"col-sm-12 col-md-6 col-lg-6\">\n              <div className=\"card mb-5 py-5 px-1\">\n                <h5 className=\"card-title ml-3\">No account yet?</h5>\n                <div className=\"card-body pb-5\">\n                  <Link\n                    to=\"/register\"\n                    className=\"btn btn-success-custom  btn-block\"\n                  >\n                    Register\n                  </Link>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nLogin.propTypes = {\n  loginUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  errors: state.errors\n});\n\nexport default connect(\n  mapStateToProps,\n  { loginUser }\n)(Login);\n","import API from '../utils/API';\n\nimport { GET_CURRENT_USER } from './types';\n\nexport const getCurrentUser = id => dispatch => {\n  API.getUser(id)\n    .then(response =>\n      dispatch({\n        type: GET_CURRENT_USER,\n        payload: response.data\n      })\n    )\n    .catch(err => console.log(err));\n};\n","import {\n  TOGGLE_CHECKOUT_MODAL,\n  TOGGLE_PRIME_MODAL,\n  TOGGLE_ADDRESS_MODAL\n} from './types';\n\nexport const toggleCheckoutModal = () => {\n  return {\n    type: TOGGLE_CHECKOUT_MODAL\n  };\n};\nexport const togglePrimeModal = () => {\n  return {\n    type: TOGGLE_PRIME_MODAL\n  };\n};\nexport const toggleAddressModal = payload => {\n  return {\n    type: TOGGLE_ADDRESS_MODAL,\n    payload\n  };\n};\n","import React from 'react';\nimport spinner from '../images/spinner.gif';\n\nexport default () => {\n  return (\n    <div className=\"content\">\n      <img\n        src={spinner}\n        style={{ width: '100px', margin: 'auto', display: 'block' }}\n        alt=\"Loading...\"\n      />\n    </div>\n  );\n};\n","export const removeDuplicates = (arr, prop) => {\n  let obj = {};\n  return Object.keys(\n    arr.reduce((prev, next) => {\n      if (!obj[next[prop]]) obj[next[prop]] = next;\n      return obj;\n    }, obj)\n  ).map(i => obj[i]);\n};\n","import React, { Component } from 'react';\nimport { PropTypes } from 'prop-types';\nimport { connect } from 'react-redux';\nimport { getCurrentUser } from '../actions/userActions';\nimport { togglePrimeModal, toggleAddressModal } from '../actions/modalActions';\nimport Spinner from './Spinner';\nimport { removeDuplicates } from '../utils/removeDuplicates';\nimport ReactStars from 'react-stars';\nimport API from '../utils/API';\n\nclass Dashboard extends Component {\n  state = {\n    rating: 0,\n    id: ''\n  };\n  componentDidMount() {\n    if (!this.props.auth.isAuthenticated) {\n      this.props.history.push('/');\n    } else {\n      const { id } = this.props.auth.user;\n      this.props.getCurrentUser(id);\n    }\n  }\n\n  ratingChanged = newRating => {\n    console.log(newRating);\n    this.setState({\n      rating: newRating\n    });\n  };\n  passId = id => {\n    this.setState({ id });\n    this.rateProduct();\n  };\n  rateProduct = () => {\n    const rate = () => {\n      const { id, rating } = this.state;\n      API.rateProduct(id, { rating })\n        .then(() => {\n          this.props.history.push('/');\n        })\n        .catch(err => console.log(err));\n    };\n    setTimeout(rate, 100);\n  };\n  onPrime = () => {\n    this.props.togglePrimeModal();\n    console.log('prime');\n  };\n  onUpdateAddress = () => {\n    const checkout = false;\n    this.props.toggleAddressModal(checkout);\n  };\n  render() {\n    const { user } = this.props;\n    let dashboardContent;\n    let primeMessage;\n    let orderMessage;\n    let addressMessage;\n\n    if (!user.name) {\n      dashboardContent = <Spinner />;\n    } else {\n      const { name, email, date, prime, orders } = user;\n      if (user.address) {\n        const { street, city, state, zipcode } = user.address;\n        addressMessage = (\n          <div className=\"mt-4 py-2 bg-gray\">\n            <h6 className=\"text my-3\">Shipping Address:</h6>\n            <h6 className=\"pb-2\">{street}</h6>\n            <h6 className=\"pb-2 mt-0 pt-0\">\n              {city},{state} {zipcode}\n            </h6>\n\n            <button\n              onClick={this.onUpdateAddress}\n              className=\"btn bt-block btn-success-custom text-caps my-3\"\n            >\n              Update Address\n            </button>\n          </div>\n        );\n      } else {\n        addressMessage = (\n          <button\n            onClick={this.onUpdateAddress}\n            className=\"btn btn-block btn-brown-custom mt-4\"\n          >\n            Add Address\n          </button>\n        );\n      }\n      if (prime.member) {\n        primeMessage = (\n          <div className=\"my-3\">\n            <div className=\"my-4 pb-2 divup\">\n              <h5 className=\"card-title ml-2\">Prime Member</h5>\n            </div>\n\n            <div className=\"my-4 px-3 py-5 bg-gray\">\n              <i className=\"fas fa-certificate\" />\n              <h5 className=\"my-5\">\n                As a prime member, you get free shipping on all U.S. orders!\n              </h5>\n\n              <small>\n                {' '}\n                Your next prime membership payment of ${prime.fee} is due on{' '}\n                {prime.nextPayment}.\n              </small>\n            </div>\n          </div>\n        );\n      } else {\n        primeMessage = (\n          <div className=\"my-4 pb-5\">\n            <div className=\"my-4 pb-3 divup\">\n              <i className=\"fas fa-award\" />\n              <h5 className=\"d-inline card-title ml-2\">\n                {' '}\n                Become a Prime Member!\n              </h5>\n            </div>\n\n            <div className=\"my-2 px-3 py-5 bg-gray\">\n              <h5 className=\"my-5\">\n                Get free U.S shipping! Become a prime member today for only\n                $59.99 a year!\n              </h5>\n\n              <button\n                onClick={this.onPrime}\n                className=\"btn btn-block btn-brown-custom mt-4\"\n              >\n                Become a Prime Member\n              </button>\n            </div>\n          </div>\n        );\n      }\n      if (user.orders.length) {\n        const uniqueOrders = removeDuplicates(orders, '_id');\n        orderMessage = (\n          <div className=\"orders\">\n            <div className=\"divup py-3 mb-5 text-center\">\n              <h5>Resent purchases:</h5>\n            </div>\n            <div>\n              {uniqueOrders.map(order => {\n                const { _id, name, brand, imgUrl, rating } = order;\n                return (\n                  <div\n                    key={_id}\n                    onClick={() => {\n                      this.passId(_id);\n                    }}\n                    className=\"d-flex flex-row\"\n                  >\n                    <div className=\"div-modal-img mr-2\">\n                      <img src={imgUrl} alt={name} />\n                      <ReactStars\n                        className=\"className= stars d-flex justify-content-center my-2\"\n                        passId={_id}\n                        count={5}\n                        size={20}\n                        color2={'#ffd700'}\n                        value={rating.total / rating.number}\n                        onChange={this.ratingChanged}\n                      />\n                    </div>\n                    <div className=\"align-self-end\">\n                      <small className=\"text-muted\">{brand}</small>\n                      <h6> {name}</h6>\n                    </div>\n                  </div>\n                );\n              })}\n            </div>\n          </div>\n        );\n      } else {\n        orderMessage = '';\n      }\n      dashboardContent = (\n        <div className=\"container-fluid mt-5 pt-2\">\n          <div className=\"row\">\n            <div className=\"col-md-12\">\n              <i className=\"ml-4 fas fa-user\" />\n              <h5 className=\"d-inline card-title ml-2\">Welcome {name}!</h5>\n              <div className=\"row\">\n                <div className=\"col-sm-12 col-md-4 col-lg-4 text-center\">\n                  <div className=\"card my-5\">\n                    <div className=\"content\">\n                      <div className=\"card-title py-4 success\">\n                        <i className=\"fas fa-user-cog\" />\n                        <h5 className=\"d-inline card-title ml-2\">\n                          {' '}\n                          Membership\n                        </h5>\n                      </div>\n                      <div className=\"card-body\">{primeMessage}</div>\n                    </div>\n                  </div>\n                </div>\n                <div className=\"col-sm-12 col-md-4 col-lg-4\">\n                  <div className=\"card my-5\">\n                    <div className=\"content\">\n                      <div className=\"card-title py-4 success text-center\">\n                        <i className=\"fas fa-box\" />\n                        <h5 className=\"d-inline card-title ml-2\">Orders</h5>\n                      </div>\n\n                      <div className=\"card-body\">{orderMessage}</div>\n                    </div>\n                  </div>\n                </div>\n\n                <div className=\"col-sm-12 col-md-4 col-lg-4 text-center\">\n                  <div className=\"card my-5\">\n                    <div className=\"content\">\n                      <div className=\"card-title py-4 success\">\n                        <i className=\"fas fa-user-cog\" />\n                        <h5 className=\"d-inline card-title ml-2\">\n                          {' '}\n                          Customer Profile\n                        </h5>\n                      </div>\n                      <div className=\"card-body\">\n                        <div className=\"pb-5\">\n                          <div className=\"pb-3 divup\">\n                            <h4>{name}</h4>\n                            <p>\n                              {' '}\n                              Customer since <br />\n                              {date}\n                            </p>\n                          </div>\n                        </div>\n                        <small>Email:</small>\n                        <small className=\"text-muted\"> {email}</small>\n                        {addressMessage}\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      );\n    }\n\n    return <div className=\"dashboard content\">{dashboardContent}</div>;\n  }\n}\n\nDashboard.propTypes = {\n  auth: PropTypes.object.isRequired,\n  getCurrentUser: PropTypes.func.isRequired,\n  togglePrimeModal: PropTypes.func.isRequired,\n  toggleAddressModal: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  user: state.user\n});\n\nexport default connect(\n  mapStateToProps,\n  { getCurrentUser, togglePrimeModal, toggleAddressModal }\n)(Dashboard);\n","import React, { Component } from 'react';\nimport { PropTypes } from 'prop-types';\nimport { connect } from 'react-redux';\n\nclass Footer extends Component {\n  render() {\n    return (\n      <div className=\"footer text-white  pt-3 pb-1\">\n        <p className=\"text-center\">\n          Copyright &copy; {new Date().getFullYear()}\n        </p>\n      </div>\n    );\n  }\n}\n\nFooter.propTypes = {\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps)(Footer);\n","import API from '../utils/API';\n\nimport {\n  GET_PRODUCTS_BY_CATEGORY,\n  GET_PRODUCTS,\n  SEARCH_PRODUCTS\n} from './types';\n\n//Get Products\n\nexport const getProductsByCategory = category => dispatch => {\n  API.getProductsByCategory(category)\n    .then(response =>\n      dispatch({\n        type: GET_PRODUCTS_BY_CATEGORY,\n        payload: response.data\n      })\n    )\n    .catch(err => console.log(err));\n};\nexport const getProducts = () => dispatch => {\n  API.getProducts()\n    .then(response =>\n      dispatch({\n        type: GET_PRODUCTS,\n        payload: response.data\n      })\n    )\n    .catch(err => console.log(err));\n};\nexport const searchProducts = query => dispatch => {\n  API.searchProducts(query)\n    .then(response =>\n      dispatch({\n        type: SEARCH_PRODUCTS,\n        payload: response.data\n      })\n    )\n    .catch(err => console.log(err));\n};\n","import React, { Component } from 'react';\nimport { PropTypes } from 'prop-types';\nimport { connect } from 'react-redux';\nimport { getProductsByCategory } from '../actions/productActions';\nimport { getCurrentUser } from '../actions/userActions';\nimport { removeDuplicates } from '../utils/removeDuplicates';\nimport { updateCartItems } from '../actions/cartActions';\nimport ReactStars from 'react-stars';\n\nclass Groceries extends Component {\n  componentDidMount() {\n    const category = this.props.location.pathname.replace('/', '');\n    this.props.getProductsByCategory(category);\n    if (this.props.auth.isAuthenticated) {\n      const { id } = this.props.auth.user;\n      this.props.getCurrentUser(id);\n    }\n  }\n\n  addToCart = (_id, name, brand, description, imgUrl, price) => {\n    const cart = JSON.parse(localStorage.getItem('cart')) || [];\n    const item = {\n      _id,\n      name,\n      brand,\n      description,\n      imgUrl,\n      price,\n      quantity: 1\n    };\n    if (cart.length) {\n      cart.forEach(stored => {\n        if (stored._id === item._id) {\n          stored.quantity += 1;\n          item.quantity += 1;\n        }\n      });\n    }\n\n    cart.push(item);\n    //Remove duplicates\n    const newCart = removeDuplicates(cart, '_id');\n    const cartItems = newCart.reduce((acc, item) => {\n      return acc + item.quantity;\n    }, 0);\n    localStorage.setItem('cartItems', cartItems);\n    this.props.updateCartItems(cartItems);\n    const serializedCart = JSON.stringify(newCart);\n    localStorage.setItem('cart', serializedCart);\n  };\n\n  render() {\n    const { products } = this.props;\n    return (\n      <div className=\"products content\">\n        <div className=\"row\">\n          {products.map(product => {\n            const {\n              _id,\n              name,\n              brand,\n              description,\n              imgUrl,\n              price,\n              rating\n            } = product;\n            return (\n              <div className=\"col-sm-12 col-md-6 col-lg-4 my-5\" key={_id}>\n                <div className=\"card align-items-center products-div d-flex\">\n                  <button\n                    className=\"btn btn-success-custom-small ml-auto mb-5\"\n                    onClick={() =>\n                      this.addToCart(\n                        _id,\n                        name,\n                        brand,\n                        description,\n                        imgUrl,\n                        price\n                      )\n                    }\n                  >\n                    <i className=\"fas fa-plus mr-2\" />\n                    Add to cart\n                  </button>\n                  <img src={imgUrl} alt={name} className=\"CardImg\" />\n\n                  <div className=\"card-body text-center\">\n                    <h6 className=\"name pb-2\">{name}</h6>\n                    <p className=\"orange strong\">${price}</p>\n                    <ReactStars\n                      className=\"className= stars d-flex justify-content-center\"\n                      count={5}\n                      size={20}\n                      color2={'#ffd700'}\n                      value={rating.total / rating.number}\n                      edit={false}\n                    />\n                    <small className=\"text\"> {description}</small>\n                  </div>\n                </div>\n              </div>\n            );\n          })}\n        </div>\n      </div>\n    );\n  }\n}\n\nGroceries.propTypes = {\n  auth: PropTypes.object.isRequired,\n  getProductsByCategory: PropTypes.func.isRequired,\n  getCurrentUser: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  products: state.products,\n  auth: state.auth,\n  user: state.user,\n  cart: state.cart\n});\n\nexport default connect(\n  mapStateToProps,\n  { getProductsByCategory, getCurrentUser, updateCartItems }\n)(Groceries);\n","import React, { Component } from 'react';\nimport { PropTypes } from 'prop-types';\nimport { connect } from 'react-redux';\nimport { getProductsByCategory } from '../actions/productActions';\nimport { getCurrentUser } from '../actions/userActions';\nimport { removeDuplicates } from '../utils/removeDuplicates';\nimport { updateCartItems } from '../actions/cartActions';\nimport ReactStars from 'react-stars';\n\nclass Supplements extends Component {\n  componentDidMount() {\n    const category = this.props.location.pathname.replace('/', '');\n    this.props.getProductsByCategory(category);\n    if (this.props.auth.isAuthenticated) {\n      const { id } = this.props.auth.user;\n      this.props.getCurrentUser(id);\n    }\n  }\n\n  addToCart = (_id, name, brand, description, imgUrl, price) => {\n    const cart = JSON.parse(localStorage.getItem('cart')) || [];\n    const item = {\n      _id,\n      name,\n      brand,\n      description,\n      imgUrl,\n      price,\n      quantity: 1\n    };\n    if (cart.length) {\n      cart.forEach(stored => {\n        if (stored._id === item._id) {\n          stored.quantity += 1;\n          item.quantity += 1;\n        }\n      });\n    }\n\n    cart.push(item);\n    //Remove duplicates\n    const newCart = removeDuplicates(cart, '_id');\n    const cartItems = newCart.reduce((acc, item) => {\n      return acc + item.quantity;\n    }, 0);\n    localStorage.setItem('cartItems', cartItems);\n    this.props.updateCartItems(cartItems);\n    const serializedCart = JSON.stringify(newCart);\n    localStorage.setItem('cart', serializedCart);\n  };\n\n  render() {\n    const { products } = this.props;\n    return (\n      <div className=\"products content\">\n        <div className=\"row\">\n          {products.map(product => {\n            const {\n              _id,\n              name,\n              brand,\n              description,\n              imgUrl,\n              price,\n              rating\n            } = product;\n            return (\n              <div className=\"col-sm-12 col-md-6 col-lg-4 my-5\" key={_id}>\n                <div className=\"card align-items-center d-flex\">\n                  <button\n                    className=\"btn btn-success-custom-small ml-auto mb-5\"\n                    onClick={() =>\n                      this.addToCart(\n                        _id,\n                        name,\n                        brand,\n                        description,\n                        imgUrl,\n                        price\n                      )\n                    }\n                  >\n                    <i className=\"fas fa-plus mr-2\" />\n                    Add to cart\n                  </button>\n                  <img src={imgUrl} alt=\"\" className=\"CardImg\" />\n\n                  <div className=\"card-body text-center\">\n                    <h6 className=\"name pb-2\">{name}</h6>\n                    <p className=\"orange strong\">${price}</p>\n                    <ReactStars\n                      className=\"className= stars d-flex justify-content-center\"\n                      count={5}\n                      size={20}\n                      color2={'#ffd700'}\n                      value={rating.total / rating.number}\n                      edit={false}\n                    />\n                    <small className=\"text\"> {description}</small>\n                  </div>\n                </div>\n              </div>\n            );\n          })}\n        </div>\n      </div>\n    );\n  }\n}\n\nSupplements.propTypes = {\n  auth: PropTypes.object.isRequired,\n  getProductsByCategory: PropTypes.func.isRequired,\n  getCurrentUser: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  products: state.products,\n  auth: state.auth,\n  user: state.user,\n  cart: state.cart\n});\n\nexport default connect(\n  mapStateToProps,\n  { getProductsByCategory, getCurrentUser, updateCartItems }\n)(Supplements);\n","import React, { Component } from 'react';\nimport { PropTypes } from 'prop-types';\nimport { connect } from 'react-redux';\nimport { getProductsByCategory } from '../actions/productActions';\nimport { getCurrentUser } from '../actions/userActions';\nimport { removeDuplicates } from '../utils/removeDuplicates';\nimport { updateCartItems } from '../actions/cartActions';\nimport ReactStars from 'react-stars';\n\nclass Clothing extends Component {\n  componentDidMount() {\n    const category = this.props.location.pathname.replace('/', '');\n    this.props.getProductsByCategory(category);\n    if (this.props.auth.isAuthenticated) {\n      const { id } = this.props.auth.user;\n      this.props.getCurrentUser(id);\n    }\n  }\n  addToCart = (_id, name, brand, description, imgUrl, price) => {\n    const cart = JSON.parse(localStorage.getItem('cart')) || [];\n    const item = {\n      _id,\n      name,\n      brand,\n      description,\n      imgUrl,\n      price,\n      quantity: 1\n    };\n    if (cart.length) {\n      cart.forEach(stored => {\n        if (stored._id === item._id) {\n          stored.quantity += 1;\n          item.quantity += 1;\n        }\n      });\n    }\n\n    cart.push(item);\n    //Remove duplicates\n    const newCart = removeDuplicates(cart, '_id');\n    const cartItems = newCart.reduce((acc, item) => {\n      return acc + item.quantity;\n    }, 0);\n    localStorage.setItem('cartItems', cartItems);\n    this.props.updateCartItems(cartItems);\n    const serializedCart = JSON.stringify(newCart);\n    localStorage.setItem('cart', serializedCart);\n  };\n  render() {\n    const { products } = this.props;\n    return (\n      <div className=\"products content\">\n        <div className=\"row\">\n          {products.map(product => {\n            const {\n              _id,\n              name,\n              brand,\n              description,\n              imgUrl,\n              price,\n              rating\n            } = product;\n            return (\n              <div className=\"col-sm-12 col-md-6 col-lg-4 my-5\" key={_id}>\n                <div className=\"card align-items-center d-flex\">\n                  <button\n                    className=\"btn btn-success-custom-small ml-auto mb-5\"\n                    onClick={() =>\n                      this.addToCart(\n                        _id,\n                        name,\n                        brand,\n                        description,\n                        imgUrl,\n                        price\n                      )\n                    }\n                  >\n                    <i className=\"fas fa-plus mr-2\" />\n                    Add to cart\n                  </button>\n                  <img src={imgUrl} alt=\"\" className=\"CardImg\" />\n\n                  <div className=\"card-body text-center\">\n                    <h6 className=\"name pb-2\">{name}</h6>\n                    <p className=\"orange strong\">${price}</p>\n                    <ReactStars\n                      className=\"className= stars d-flex justify-content-center\"\n                      count={5}\n                      size={20}\n                      color2={'#ffd700'}\n                      value={rating.total / rating.number}\n                      edit={false}\n                    />\n                    <small className=\"text\"> {description}</small>\n                  </div>\n                </div>\n              </div>\n            );\n          })}\n        </div>\n      </div>\n    );\n  }\n}\n\nClothing.propTypes = {\n  auth: PropTypes.object.isRequired,\n  getProductsByCategory: PropTypes.func.isRequired,\n  getCurrentUser: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  products: state.products,\n  auth: state.auth,\n  user: state.user,\n  cart: state.cart\n});\n\nexport default connect(\n  mapStateToProps,\n  { getProductsByCategory, getCurrentUser, updateCartItems }\n)(Clothing);\n","import React, { Component } from 'react';\nimport { PropTypes } from 'prop-types';\nimport { connect } from 'react-redux';\nimport { getCurrentUser } from '../actions/userActions';\nimport { searchProducts } from '../actions/productActions';\nimport { removeDuplicates } from '../utils/removeDuplicates';\nimport { updateCartItems } from '../actions/cartActions';\nimport ReactStars from 'react-stars';\n\nclass Search extends Component {\n  componentWillMount() {\n    if (this.props.auth.isAuthenticated) {\n      const { id } = this.props.auth.user;\n      this.props.getCurrentUser(id);\n    }\n    const query = this.props.history.location.pathname\n      .replace('/search/', '')\n      .toLowerCase();\n    this.props.searchProducts(query);\n  }\n\n  addToCart = (_id, name, price) => {\n    console.log(_id, name, price);\n  };\n\n  addToCart = (_id, name, brand, description, imgUrl, price) => {\n    const cart = JSON.parse(localStorage.getItem('cart')) || [];\n    const item = {\n      _id,\n      name,\n      brand,\n      description,\n      imgUrl,\n      price,\n      quantity: 1\n    };\n    if (cart.length) {\n      cart.forEach(stored => {\n        if (stored._id === item._id) {\n          stored.quantity += 1;\n          item.quantity += 1;\n        }\n      });\n    }\n\n    cart.push(item);\n    //Remove duplicates\n    const newCart = removeDuplicates(cart, '_id');\n    const cartItems = newCart.reduce((acc, item) => {\n      return acc + item.quantity;\n    }, 0);\n    localStorage.setItem('cartItems', cartItems);\n    this.props.updateCartItems(cartItems);\n    const serializedCart = JSON.stringify(newCart);\n    localStorage.setItem('cart', serializedCart);\n  };\n\n  render() {\n    const { products } = this.props;\n    return (\n      <div className=\"products content\">\n        <div className=\"row\">\n          {products.map(product => {\n            const {\n              _id,\n              name,\n              brand,\n              description,\n              imgUrl,\n              price,\n              rating\n            } = product;\n            return (\n              <div className=\"col-md-4 my-5\" key={_id}>\n                <div className=\"card align-items-center d-flex\">\n                  <button\n                    className=\"btn success ml-auto mb-5\"\n                    onClick={() =>\n                      this.addToCart(\n                        _id,\n                        name,\n                        brand,\n                        description,\n                        imgUrl,\n                        price\n                      )\n                    }\n                  >\n                    <i className=\"fas fa-plus mr-2\" />\n                    Add to cart\n                  </button>\n                  <img src={imgUrl} alt=\"\" className=\"CardImg\" />\n\n                  <div className=\"card-body text-center\">\n                    <h6 className=\"name pb-2\">{name}</h6>\n                    <p className=\"orange strong\">${price}</p>\n                    <ReactStars\n                      className=\"className= stars d-flex justify-content-center\"\n                      count={5}\n                      size={20}\n                      color2={'#ffd700'}\n                      value={rating.total / rating.number}\n                      edit={false}\n                    />\n                    <small className=\"text\"> {description}</small>\n                  </div>\n                </div>\n              </div>\n            );\n          })}\n        </div>\n      </div>\n    );\n  }\n}\n\nSearch.propTypes = {\n  auth: PropTypes.object.isRequired,\n  getCurrentUser: PropTypes.func.isRequired,\n  searchProducts: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  products: state.products,\n  auth: state.auth,\n  user: state.user,\n  cart: state.cart\n});\n\nexport default connect(\n  mapStateToProps,\n  { getCurrentUser, searchProducts, updateCartItems }\n)(Search);\n","import React, { Component } from 'react';\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\nimport {\n  toggleAddressModal,\n  toggleCheckoutModal\n} from '../../actions/modalActions';\nimport classnames from 'classnames';\nimport { PropTypes } from 'prop-types';\nimport { connect } from 'react-redux';\nimport API from '../../utils/API';\n\nclass Address extends Component {\n  state = {\n    street: '',\n    city: '',\n    $state: '',\n    zipcode: '',\n    errors: {}\n  };\n  toggle = () => {\n    this.props.toggleAddressModal();\n  };\n\n  onChange = e => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  onSubmit = e => {\n    e.preventDefault();\n    const checkout = this.props.modal.checkout;\n    const id = this.props.auth.user.id;\n    const address = {\n      street: this.state.street,\n      city: this.state.city,\n      state: this.state.$state,\n      zipcode: this.state.zipcode\n    };\n    API.addAddress(id, address)\n      .then(() => {\n        if (!this.props.modal.checkout) {\n          this.props.toggleAddressModal(checkout);\n          this.props.history.push('/loading');\n          setTimeout(() => this.props.history.push('/dashboard'), 20);\n        } else {\n          this.props.onCheckout(this.props.subtotal);\n          this.props.toggleAddressModal();\n        }\n      })\n\n      .catch(err => console.log(err));\n  };\n\n  render() {\n    const { errors } = this.state;\n    let addressForm;\n    if (this.props.auth.isAuthenticated) {\n      addressForm = (\n        <div className=\"address\">\n          <Modal isOpen={this.props.modal.addressModal} toggle={this.toggle}>\n            <ModalHeader toggle={this.toggle} className=\"bg-gray\">\n              <i className=\"ml-4 fas fa-address-book\" />\n              <h5 className=\"d-inline ml-2\">Shipping Address </h5>\n            </ModalHeader>\n            <ModalBody>\n              <div className=\"card-body\">\n                <form onSubmit={this.onSubmit}>\n                  <div className=\"form-group\">\n                    <label htmlFor=\"street\" className=\"label\">\n                      Street Address\n                    </label>\n                    <input\n                      type=\"text\"\n                      className={classnames('form-control form-control-lg', {\n                        'is-invalid': errors.street\n                      })}\n                      name=\"street\"\n                      value={this.state.street}\n                      onChange={this.onChange}\n                    />\n                    {errors.street && (\n                      <div className=\"invalid-feedback\">{errors.street}</div>\n                    )}\n                  </div>\n                  <div className=\"form-group\">\n                    <label htmlFor=\"city\" className=\"label\">\n                      City\n                    </label>\n                    <input\n                      type=\"text\"\n                      className={classnames('form-control form-control-lg', {\n                        'is-invalid': errors.city\n                      })}\n                      name=\"city\"\n                      value={this.state.city}\n                      onChange={this.onChange}\n                    />\n                    {errors.city && (\n                      <div className=\"invalid-feedback\">{errors.city}</div>\n                    )}\n                  </div>\n                  <div className=\"form-group\">\n                    <label htmlFor=\"$state\" className=\"label\">\n                      State\n                    </label>\n                    <select\n                      className=\"form-control form-control-lg\"\n                      name=\"$state\"\n                      value={this.state.$state}\n                      onChange={this.onChange}\n                    >\n                      <option value=\"AL\">Alabama</option>\n                      <option value=\"AK\">Alaska</option>\n                      <option value=\"AZ\">Arizona</option>\n                      <option value=\"AR\">Arkansas</option>\n                      <option value=\"CA\">California</option>\n                      <option value=\"CO\">Colorado</option>\n                      <option value=\"CT\">Connecticut</option>\n                      <option value=\"DE\">Delaware</option>\n                      <option value=\"DC\">District Of Columbia</option>\n                      <option value=\"FL\">Florida</option>\n                      <option value=\"GA\">Georgia</option>\n                      <option value=\"HI\">Hawaii</option>\n                      <option value=\"ID\">Idaho</option>\n                      <option value=\"IL\">Illinois</option>\n                      <option value=\"IN\">Indiana</option>\n                      <option value=\"IA\">Iowa</option>\n                      <option value=\"KS\">Kansas</option>\n                      <option value=\"KY\">Kentucky</option>\n                      <option value=\"LA\">Louisiana</option>\n                      <option value=\"ME\">Maine</option>\n                      <option value=\"MD\">Maryland</option>\n                      <option value=\"MA\">Massachusetts</option>\n                      <option value=\"MI\">Michigan</option>\n                      <option value=\"MN\">Minnesota</option>\n                      <option value=\"MS\">Mississippi</option>\n                      <option value=\"MO\">Missouri</option>\n                      <option value=\"MT\">Montana</option>\n                      <option value=\"NE\">Nebraska</option>\n                      <option value=\"NV\">Nevada</option>\n                      <option value=\"NH\">New Hampshire</option>\n                      <option value=\"NJ\">New Jersey</option>\n                      <option value=\"NM\">New Mexico</option>\n                      <option value=\"NY\">New York</option>\n                      <option value=\"NC\">North Carolina</option>\n                      <option value=\"ND\">North Dakota</option>\n                      <option value=\"OH\">Ohio</option>\n                      <option value=\"OK\">Oklahoma</option>\n                      <option value=\"OR\">Oregon</option>\n                      <option value=\"PA\">Pennsylvania</option>\n                      <option value=\"RI\">Rhode Island</option>\n                      <option value=\"SC\">South Carolina</option>\n                      <option value=\"SD\">South Dakota</option>\n                      <option value=\"TN\">Tennessee</option>\n                      <option value=\"TX\">Texas</option>\n                      <option value=\"UT\">Utah</option>\n                      <option value=\"VT\">Vermont</option>\n                      <option value=\"VA\">Virginia</option>\n                      <option value=\"WA\">Washington</option>\n                      <option value=\"WV\">West Virginia</option>\n                      <option value=\"WI\">Wisconsin</option>\n                      <option value=\"WY\">Wyoming</option>\n                    </select>\n                  </div>\n                  <div className=\"form-group\">\n                    <label htmlFor=\"zipcode\" className=\"label\">\n                      Zipcode\n                    </label>\n                    <input\n                      type=\"text\"\n                      className={classnames('form-control form-control-lg', {\n                        'is-invalid': errors.zipcode\n                      })}\n                      name=\"zipcode\"\n                      maxLength=\"5\"\n                      value={this.state.zipcode}\n                      onChange={this.onChange}\n                    />\n                    {errors.zipcode && (\n                      <div className=\"invalid-feedback\">{errors.zipcode}</div>\n                    )}\n                  </div>\n\n                  <input\n                    type=\"submit\"\n                    className=\"btn btn-success-custom  btn-block mt-4 py-2\"\n                  />\n                </form>\n              </div>\n            </ModalBody>\n            <ModalFooter />\n          </Modal>\n        </div>\n      );\n\n      if (this.props.auth.isAuthenticated) {\n        // console.log(this.props.onCheckout);\n        return <div className=\"address\">{addressForm}</div>;\n      }\n      return false;\n    } else {\n      return null;\n    }\n  }\n}\n\nAddress.propTypes = {\n  auth: PropTypes.object.isRequired,\n  toggleAddressModal: PropTypes.func.isRequired,\n  toggleCheckoutModal: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  products: state.products,\n  auth: state.auth,\n  user: state.user,\n  cart: state.cart,\n  modal: state.modal\n});\n\nexport default connect(\n  mapStateToProps,\n  { toggleAddressModal, toggleCheckoutModal }\n)(Address);\n","import React, { Component } from 'react';\nimport { PropTypes } from 'prop-types';\nimport { connect } from 'react-redux';\nimport Address from './modals/Address';\nimport { getCurrentUser } from '../actions/userActions';\nimport {\n  updateCartItems,\n  updateCart,\n  toggleCart,\n  getFinalOrder,\n  getSubtotal\n} from '../actions/cartActions';\nimport {\n  toggleCheckoutModal,\n  toggleAddressModal\n} from '../actions/modalActions';\nimport classnames from 'classnames';\nimport API from '../utils/API';\n// import API from '../utils/API';\n\nclass Cart extends Component {\n  componentDidMount() {\n    if (this.props.auth.isAuthenticated) {\n      const { id } = this.props.auth.user;\n      this.props.getCurrentUser(id);\n    }\n  }\n\n  onCheckout = subtotal => {\n    console.log('onCheckout');\n    if (!this.props.auth.isAuthenticated) {\n      this.props.toggleCart();\n      this.props.history.push('/login');\n    } else {\n      const { id } = this.props.auth.user;\n      console.log(id);\n      API.getUser(id).then(response => {\n        if (!response.data.address) {\n          const checkout = true;\n          this.props.toggleAddressModal(checkout);\n        } else {\n          const order = [];\n          const cart = JSON.parse(localStorage.getItem('cart'));\n          cart.forEach(item => {\n            if (item.quantity > 0) {\n              order.push(item);\n            }\n          });\n          this.props.getFinalOrder(order);\n          this.props.getSubtotal(subtotal);\n          this.props.toggleCheckoutModal();\n        }\n      });\n    }\n  };\n\n  onPlus = (_id, cart, cartItems) => {\n    const newCart = cart.map(item => {\n      if (item._id === _id) {\n        item.quantity++;\n      }\n      return item;\n    });\n    localStorage.setItem('cart', JSON.stringify(newCart));\n    this.props.updateCart(JSON.parse(localStorage.getItem('cart')));\n    localStorage.setItem('cartItems', parseInt(cartItems) + 1);\n    this.props.updateCartItems(localStorage.getItem('cartItems'));\n  };\n  onMinus = (_id, cart, cartItems) => {\n    let newCart = cart.map(item => {\n      if (item._id === _id) {\n        item.quantity--;\n      }\n      return item;\n    });\n\n    localStorage.setItem('cart', JSON.stringify(newCart));\n    this.props.updateCart(JSON.parse(localStorage.getItem('cart')));\n    localStorage.setItem('cartItems', parseInt(cartItems) - 1);\n    this.props.updateCartItems(localStorage.getItem('cartItems'));\n    setTimeout(() => {\n      if (this.props.cart.cartItems === '0') {\n        this.props.toggleCart();\n      }\n    }, 1);\n  };\n  onTrash = (_id, cart, cartItems) => {\n    let newCart = cart.map(item => {\n      if (item._id === _id) {\n        localStorage.setItem('cartItems', cartItems - item.quantity);\n        item.quantity = 0;\n      }\n      return item;\n    });\n\n    localStorage.setItem('cart', JSON.stringify(newCart));\n    this.props.updateCart(JSON.parse(localStorage.getItem('cart')));\n    this.props.updateCartItems(localStorage.getItem('cartItems'));\n    setTimeout(() => {\n      if (this.props.cart.cartItems === '0') {\n        this.props.toggleCart();\n      }\n    }, 1);\n  };\n\n  render() {\n    // const { user } = this.props;\n    // console.log('user:', user);\n    const cart = JSON.parse(localStorage.getItem('cart'));\n    const cartItems = localStorage.getItem('cartItems');\n    let subtotal;\n    if (cart) {\n      subtotal = cart.reduce((acc, item) => {\n        const price = item.quantity * item.price;\n        return acc + price;\n      }, 0);\n    }\n\n    const items = this.props.cart.cartItems === '1' ? 'Item' : 'Items';\n    return (\n      <React.Fragment>\n        <Address\n          subtotal={subtotal}\n          onCheckout={() => this.onCheckout(subtotal)}\n          history={this.props.history}\n        />\n        <div\n          className={classnames(\n            'card col-sm-12 cart card-border shadow-lg bg-gray rounded',\n            {\n              isShowing: this.props.cart.cartShowing\n            }\n          )}\n        >\n          {' '}\n          <div className=\"card-title divup pt-3 pb-4\">\n            <h6 className=\"bold text-center text-dark d-inline cart-header\">\n              {this.props.cart.cartItems} {items} Selected\n            </h6>\n            <button\n              type=\"button toggle-cart\"\n              className=\"close\"\n              aria-label=\"Close\"\n              onClick={this.props.toggleCart}\n            >\n              <span aria-hidden=\"true\">&times;</span>\n            </button>\n          </div>\n          <div className=\"card-body px-0 mx-0\">\n            <div className=\"container pl-0\">\n              <div className=\"pl-0 ml-0 mb-1 pb-2 cart-content\">\n                {cart\n                  ? cart.map(item => {\n                      const { _id, name, brand, imgUrl, quantity } = item;\n                      if (quantity > 0) {\n                        return (\n                          <div key={_id} className=\"d-flex flex-row divup pb-2\">\n                            <div className=\"pr-4 pt-2 div-modal-img\">\n                              <img src={imgUrl} alt={name} />\n                            </div>\n                            <div className=\"align-self-end\">\n                              <small className=\"text-muted\">{brand}</small>\n                              <h6>{name}</h6>\n\n                              <p className=\"quantity text-muted mt-2\">\n                                Qty:\n                                <span className=\"bg-white span-border ml-1 py-1 pr-2 pl-2\">\n                                  {quantity}\n                                </span>\n                                <i\n                                  className=\"fas fa-minus ml-2\"\n                                  onClick={() =>\n                                    this.onMinus(_id, cart, cartItems)\n                                  }\n                                />\n                                <i\n                                  className=\"fas fa-plus ml-2\"\n                                  onClick={() =>\n                                    this.onPlus(_id, cart, cartItems)\n                                  }\n                                />\n                                <i\n                                  className=\"fas fa-trash mx-2\"\n                                  onClick={() =>\n                                    this.onTrash(_id, cart, cartItems)\n                                  }\n                                />\n                              </p>\n                            </div>\n                          </div>\n                        );\n                      }\n\n                      return false;\n                    })\n                  : null}\n\n                <p className=\"card-title-subtext mt-3 text-right\">\n                  Subtotal: ${subtotal ? subtotal.toFixed(2) : '0.00'}\n                </p>\n                <br />\n                <button\n                  className=\"btn proceed btn-success-custom  ml-2 pb-2 mb-2 pt-2 btn-block\"\n                  disabled={this.props.cart.cartItems === '0'}\n                  onClick={() => this.onCheckout(subtotal)}\n                >\n                  Proceed to checkout\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nCart.propTypes = {\n  auth: PropTypes.object.isRequired,\n  getCurrentUser: PropTypes.func.isRequired,\n  updateCartItems: PropTypes.func.isRequired,\n  updateCart: PropTypes.func.isRequired,\n  toggleCart: PropTypes.func.isRequired,\n  toggleCheckoutModal: PropTypes.func.isRequired,\n  toggleAddressModal: PropTypes.func.isRequired,\n  getFinalOrder: PropTypes.func.isRequired,\n  getSubtotal: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  products: state.products,\n  auth: state.auth,\n  user: state.user,\n  cart: state.cart,\n  modal: state.modal\n});\n\nexport default connect(\n  mapStateToProps,\n  {\n    getCurrentUser,\n    updateCartItems,\n    updateCart,\n    toggleCart,\n    toggleCheckoutModal,\n    toggleAddressModal,\n    getFinalOrder,\n    getSubtotal\n  }\n)(Cart);\n","import React, { Component } from 'react';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\nimport { toggleCheckoutModal } from '../../actions/modalActions';\nimport {\n  updateCartItems,\n  updateCart,\n  toggleCart\n} from '../../actions/cartActions';\n\nimport { PropTypes } from 'prop-types';\nimport { connect } from 'react-redux';\nimport Spinner from '../Spinner';\nimport API from '../../utils/API';\n\nclass Checkout extends Component {\n  toggle = () => {\n    this.props.toggleCheckoutModal();\n  };\n\n  onOrder = () => {\n    const { _id } = this.props.user;\n    console.log(_id);\n    const { order } = this.props.cart;\n    const products = [];\n    order.forEach(product => {\n      products.push([product._id, product.quantity]);\n    });\n    console.log(products);\n    API.placeOrder(_id, { products })\n      .then(() => {\n        this.props.history.push('/loading');\n        setTimeout(() => this.props.history.push('/dashboard'), 20);\n      })\n      .catch(err => console.log(err));\n    localStorage.setItem('cartItems', 0);\n    this.props.updateCartItems(localStorage.getItem('cartItems'));\n    localStorage.setItem('cart', JSON.stringify([]));\n    this.props.updateCart(JSON.parse(localStorage.getItem('cart')));\n    this.props.toggleCart();\n    this.props.toggleCheckoutModal();\n  };\n\n  onCancel = () => {\n    const pathname = this.props.history.location.pathname;\n    this.toggle();\n    this.props.history.push('/loading');\n    setTimeout(() => {\n      this.props.history.push(pathname);\n    }, 10);\n  };\n\n  render() {\n    const order = this.props.cart.order;\n    const { user } = this.props;\n    let shipping;\n    let shippingText;\n    let checkoutContent;\n    let tax;\n    if (this.props.auth.isAuthenticated) {\n      if (!user.name) {\n        checkoutContent = <Spinner />;\n      } else if (user.prime.member) {\n        shipping = 0;\n        shippingText = `$0.00 (prime rate)`;\n      } else {\n        shipping = ((this.props.cart.subtotal / 100) * 8 + 2.89).toFixed(2);\n        shippingText = `$${shipping}`;\n      }\n      tax = ((this.props.cart.subtotal / 100) * 6.05).toFixed(2);\n      checkoutContent = (\n        <div className=\"checkout\">\n          <Modal\n            isOpen={this.props.modal.checkoutModal}\n            toggle={this.toggle}\n            className={this.props.className}\n          >\n            <ModalHeader toggle={this.toggle} className=\"bg-gray\">\n              ORDER SUMMARY\n            </ModalHeader>\n            <ModalBody>\n              <table className=\"table\">\n                <thead>\n                  <tr className=\"tex-white no-padding\">\n                    <th\n                      scope=\"col\"\n                      className=\"  bg-darkgray border-white text-center pt-3 pb-0\"\n                    >\n                      <p className=\"small-heading\"> Item</p>\n                    </th>\n                    <th\n                      scope=\"col\"\n                      className=\"bg-darkgray border-white text-center pt-3 pb-0\"\n                    >\n                      <p className=\"small-heading\"> Qty</p>\n                    </th>\n                    <th\n                      scope=\"col\"\n                      className=\"bg-darkgray border-white text-center pt-3 pb-0\"\n                    >\n                      <p className=\"small-heading\"> Price</p>\n                    </th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {order.map(item => (\n                    <tr key={item._id} className=\"table\">\n                      <td className=\"text-center dark-gray medium-height\">\n                        <small>{item.name}</small>\n                      </td>\n                      <td className=\"text-center dark-gray medium-heigh\">\n                        <small>{item.quantity}</small>\n                      </td>\n                      <td className=\"text-center dark-gray medium-heigh\">\n                        <small>${item.price}</small>\n                      </td>\n                    </tr>\n                  ))}\n                  <tr />\n                </tbody>\n              </table>\n            </ModalBody>\n            <ModalFooter className=\"bg-gray ml-0\">\n              <div className=\"container\">\n                <div className=\"row\">\n                  <div className=\"col-sm-12\">\n                    <ul className=\"ml-0 pl-0\">\n                      <li className=\"dark-gray font-small\">\n                        Subtotal{' '}\n                        <span className=\"float-right\">\n                          ${this.props.cart.subtotal.toFixed(2)}\n                        </span>\n                      </li>\n                      <li className=\"dark-gray font-small \">\n                        Tax <span className=\"float-right\">${tax}</span>\n                      </li>\n                      <li className=\"dark-gray font-small\">\n                        Shipping{' '}\n                        <span className=\"float-right\">{shippingText}</span>\n                      </li>\n                      <hr />\n                      <li className=\"mb-3 \">\n                        <h5 className=\"d-inline bold-light-black mt-0 pt-0\">\n                          Total\n                        </h5>\n                        <span className=\"float-right bold-light-black\">\n                          $\n                          {(\n                            this.props.cart.subtotal +\n                            parseFloat(tax) +\n                            parseFloat(shipping)\n                          ).toFixed(2)}\n                        </span>\n                      </li>\n                    </ul>\n                  </div>\n                  <div className=\"col-sm-12\">\n                    <Button\n                      className=\"btn-custom ml-2 px-4 btn-success-custom float-right order-last py-1\"\n                      onClick={() => this.onOrder()}\n                    >\n                      Place Your Order\n                    </Button>\n                    <Button\n                      className=\" btn-red btn-custom float-right py-1\"\n                      onClick={this.onCancel}\n                    >\n                      Cancel\n                    </Button>\n                  </div>\n                </div>\n              </div>\n            </ModalFooter>\n          </Modal>\n        </div>\n      );\n    }\n\n    if (this.props.auth.isAuthenticated) {\n      console.log(this.props.history.location.pathname);\n      return <div className=\"checkout\">{checkoutContent}</div>;\n    }\n    return false;\n  }\n}\n\nCheckout.propTypes = {\n  auth: PropTypes.object.isRequired,\n  toggleCheckoutModal: PropTypes.func.isRequired,\n  updateCartItems: PropTypes.func.isRequired,\n  updateCart: PropTypes.func.isRequired,\n  toggleCart: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  products: state.products,\n  auth: state.auth,\n  user: state.user,\n  cart: state.cart,\n  modal: state.modal\n});\n\nexport default connect(\n  mapStateToProps,\n  { toggleCheckoutModal, updateCartItems, updateCart, toggleCart }\n)(Checkout);\n","import React, { Component } from 'react';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\nimport { togglePrimeModal } from '../../actions/modalActions';\nimport {\n  updateCartItems,\n  updateCart,\n  toggleCart\n} from '../../actions/cartActions';\n\nimport { PropTypes } from 'prop-types';\nimport { connect } from 'react-redux';\nimport API from '../../utils/API';\n\nclass Prime extends Component {\n  toggle = () => {\n    this.props.togglePrimeModal();\n  };\n\n  onPrime = _id => {\n    console.log(_id);\n    API.signupForPrime(_id).then(res => console.log(res));\n    setTimeout(() => {\n      this.props.history.push('/');\n    }, 1);\n    this.props.togglePrimeModal();\n  };\n\n  render() {\n    let primeContent;\n    if (this.props.auth.isAuthenticated) {\n      const { user } = this.props;\n      primeContent = (\n        <div className=\"prime\">\n          <Modal\n            isOpen={this.props.modal.primeModal}\n            toggle={this.toggle}\n            className={this.props.className}\n          >\n            <ModalHeader toggle={this.toggle} className=\"bg-gray\">\n              Prime Membership{' '}\n            </ModalHeader>\n            <ModalBody>\n              <p>\n                {' '}\n                <small>\n                  Becomming a Pirme Member pays for itself with exclusive\n                  savings on the things you need, the things you love, and all\n                  sorts of unexpected things.\n                </small>\n                <h6 className=\"mt-4\">\n                  All <strong>Prime Members</strong> receive the next benefits:\n                </h6>\n                <div className=\"d-flex flex-row\">\n                  <div className=\"pl-4 py-1 pr-1  align-self-start\">\n                    <i className=\"fa fa-check\" />\n                  </div>\n                  <div className=\"p-1 align-self-end text-gray\">\n                    Extra offers on top of already low-prices\n                  </div>\n                </div>\n                <div className=\"d-flex flex-row\">\n                  <div className=\"pl-4 py-1 pr-1 align-self-start\">\n                    <i className=\"fa fa-check\" />\n                  </div>\n                  <div className=\"p-1 align-self-end text-gray\">\n                    Free Two-Day Shipping\n                  </div>\n                </div>\n              </p>\n              <p className=\"float-right\">\n                Anual Fee: <span className=\"text-danger\">$59.99</span>\n              </p>\n            </ModalBody>\n            <ModalFooter>\n              <Button\n                className=\"text-darkbrown mt-4 btn btn-outline-light\"\n                onClick={this.toggle}\n              >\n                No Thanks\n              </Button>\n              <Button\n                className=\"btn btn-success-custom  btn-block mt-4 py-2\"\n                onClick={() => this.onPrime(user._id)}\n              >\n                Start Prime Membership\n              </Button>{' '}\n            </ModalFooter>\n            <div className=\"px-4 py-2\">\n              {' '}\n              <small className=\"text-gray\">\n                By signing up, you authorize us to charge your default payment\n                method on file. Your Prime membership continues until cancelled.\n              </small>\n            </div>\n          </Modal>\n        </div>\n      );\n\n      if (this.props.auth.isAuthenticated) {\n        return <div className=\"prime\">{primeContent}</div>;\n      }\n      return false;\n    } else {\n      return null;\n    }\n  }\n}\n\nPrime.propTypes = {\n  auth: PropTypes.object.isRequired,\n  togglePrimeModal: PropTypes.func.isRequired,\n  updateCartItems: PropTypes.func.isRequired,\n  updateCart: PropTypes.func.isRequired,\n  toggleCart: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  products: state.products,\n  auth: state.auth,\n  user: state.user,\n  cart: state.cart,\n  modal: state.modal\n});\n\nexport default connect(\n  mapStateToProps,\n  { togglePrimeModal, updateCartItems, updateCart, toggleCart }\n)(Prime);\n","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport jwt_decode from 'jwt-decode';\nimport setAuthToken from './utils/setAuthToken';\nimport { setCurrentUser, logoutUser } from './actions/authActions';\nimport { Provider } from 'react-redux';\nimport store from './store';\n\nimport Navbar from './components/layout/Navbar';\nimport Landing from './components/layout/Landing';\nimport Register from './components/auth/Register';\nimport Login from './components/auth/Login';\nimport Dashboard from './components/Dashboard';\nimport Footer from './components/layout/Footer';\nimport Groceries from './components/Groceries';\nimport Supplements from './components/Supplements';\nimport Clothing from './components/Clothing';\nimport Search from './components/Search';\nimport Cart from './components/Cart';\nimport Checkout from './components/modals/Checkout';\nimport Prime from './components/modals/Prime';\nimport Spinner from './components/Spinner';\nimport './App.scss';\n\n//Check for token\nif (localStorage.jwtToken) {\n  //Set auth token header auth\n  setAuthToken(localStorage.token);\n  //Decode token and get user info and expiration\n  const decoded = jwt_decode(localStorage.jwtToken);\n  //Set usere and isAuthenticated\n  store.dispatch(setCurrentUser(decoded));\n\n  // Check for expired token\n  const currentTime = Date.now / 1000;\n  if (decoded.exp < currentTime) {\n    store.dispatch(logoutUser());\n    window.location.href = '/login';\n  }\n}\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <Router>\n          <div className=\"App\">\n            <Route path=\"/\" component={Navbar} />\n            <Route path=\"/\" component={Cart} />\n            <Route path=\"/\" component={Checkout} />\n            <Route path=\"/\" component={Prime} />\n            <Route exact path=\"/\" component={Landing} />\n            <div className=\"container\">\n              <Route exact path=\"/register\" component={Register} />\n              <Route exact path=\"/login\" component={Login} />\n              <Route exact path=\"/dashboard\" component={Dashboard} />\n              <Route exact path=\"/groceries\" component={Groceries} />\n              <Route exact path=\"/supplements\" component={Supplements} />\n              <Route exact path=\"/clothing\" component={Clothing} />\n              <Route path=\"/search\" component={Search} />\n              <Route exact path=\"/loading\" component={Spinner} />\n            </div>\n            <Footer />\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}